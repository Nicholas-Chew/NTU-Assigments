


ARM Macro Assembler    Page 1 


    1 00000000         ; Blink_LED.s   Lab #1 sample program
    2 00000000         ; This program blink the LEDs on the DE0 board
    3 00000000         
    4 00000000         ; Stack related directives
    5 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
=4 
                                                            ; Name this block o
                                                            f code as STACK, re
                                                            side in the RAM are
                                                            a
    6 00000000 00000200 
                       Stack_Size
                               EQU              0x200       ; Stack Size = 0x20
                                                            0 bytes
    7 00000000         Stack_Mem
                               SPACE            Stack_Size  ; Reserve the space
                                                             in RAM
    8 00000200         TOP_STACK                            ; Set top of stack 
                                                            location
    9 00000200         
   10 00000200         ; Vector Table - link to Address 0 at Reset
   11 00000200                 AREA             RESET, DATA, READONLY ; Name th
                                                            is block of code as
                                                             RESET, reside in t
                                                            he ROM area
   12 00000000 00000000 
                       __Vectors
                               DCD              TOP_STACK   ; Vector table star
                                                            t here, first enty 
                                                            is the 'Top of stac
                                                            k'
   13 00000004 00000000        DCD              START       ; second entry is t
                                                            he Reset vector add
                                                            ress
   14 00000008         
   15 00000008         ; User Application
   16 00000008                 AREA             texts, CODE, READONLY ; Name th
                                                            is block of code as
                                                             texts, reside in t
                                                            he ROM area
   17 00000000         ENTRY                                ; Mark first instru
                                                            ction to execute
   18 00000000         START   PROC                         ; Declaration of su
                                                            broutine/function 
   19 00000000 4A0A            LDR              R2,=0xA0000000 ; Logical left s
                                                            hift R2 to obtain t
                                                            he correct address-
                                                            0xA0000000
   20 00000002 4D0B            LDR              R5,=0xA0001000
   21 00000004         
   22 00000004 480B    leds_on LDR              R0,=0x155   ; Store 0x155 direc
                                                            tly into R0 , Odd
   23 00000006 6829            LDR              R1,[R5]
   24 00000008 4308            ORRS             R0,R1
   25 0000000A 6010            STR              R0,[R2,#0x00] ; Store the value
                                                             to the DE0_LED add
                                                            ress
   26 0000000C F7FF FFFE       BL               DELAY       ; Call the DELAY fu
                                                            nction   



ARM Macro Assembler    Page 2 


   27 00000010         
   28 00000010 4809            LDR              R0,=0x2AA   ; Store 0x2AA direc
                                                            tly into R0 , Even
   29 00000012 6829            LDR              R1,[R5]
   30 00000014 4308            ORRS             R0,R1
   31 00000016 6010            STR              R0,[R2,#0x00] ; Store the value
                                                             to the DE0_LED add
                                                            ress
   32 00000018 F7FF FFFE       BL               DELAY       ; Call the DELAY fu
                                                            nction
   33 0000001C         
   34 0000001C E7F2            B                leds_on     ; Repeat
   35 0000001E                 ENDP                         ; END of this subro
                                                            utine
   36 0000001E         
   37 0000001E         ;Delay subroutine
   38 0000001E 000FFFFF 
                       COUNTER EQU              0xFFFFF     ; Counter to be use
                                                            d for delay looping
                                                            
   39 0000001E         
   40 0000001E         DELAY   PROC                         ; Declaration of DE
                                                            LAY subroutine
   41 0000001E 2403            MOVS             R4,#3
   42 00000020 4B06    delay0  ldr              R3,=COUNTER ; Initialize R3 wit
                                                            h delay COUNTER
   43 00000022 3B01    delay1  SUBS             R3,#1
   44 00000024 D1FD            BNE              delay1
   45 00000026 3C01            SUBS             R4,#1
   46 00000028 D1FA            BNE              delay0
   47 0000002A 4770            BX               LR          ;Return to the call
                                                            ing function
   48 0000002C                 ENDP
   49 0000002C         
   50 0000002C         
   51 0000002C         
   52 0000002C         ; The following codes are not used in this application, 
                       but their symbols are required for error-free linking by
                        default linker setup 
   53 0000002C                 EXPORT           __Vectors   ; default symbol re
                                                            quired by the linke
                                                            r, not used in this
                                                             program      
   54 0000002C                 EXPORT           Reset_Handler ; default symbol 
                                                            required by linker,
                                                             not needed in this
                                                             program
   55 0000002C         
   56 0000002C A0000000 
              A0001000 
              00000155 
              000002AA 
              000FFFFF         AREA             texts, CODE, READONLY, ALIGN=4
   57 00000040         Reset_Handler
                               PROC                         ; Typical code for 
                                                            Reset_vector handle
                                                            r
   58 00000040 4800            LDR              R0, =START  ; User Application 
                                                            called by Label



ARM Macro Assembler    Page 3 


   59 00000042 4700            BX               R0
   60 00000044                 ENDP
   61 00000044         
   62 00000044                 END                          ; End of code. Asse
                                                            mbler ignore code b
                                                            eyind this point   
                                                             
              00000000 
Command Line: --debug --xref --cpu=Cortex-M1 --apcs=interwork -oExe_C.o -IC:\Ke
il\ARM\INC -IC:\Keil\ARM\INC\ARM --predefine="__MICROLIB SETA 1" --list=Exe_C.l
st Exe_C.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK 00000000

Symbol: STACK
   Definitions
      At line 5 in file Exe_C.s
   Uses
      None
Comment: STACK unused
Stack_Mem 00000000

Symbol: Stack_Mem
   Definitions
      At line 7 in file Exe_C.s
   Uses
      None
Comment: Stack_Mem unused
TOP_STACK 00000200

Symbol: TOP_STACK
   Definitions
      At line 8 in file Exe_C.s
   Uses
      At line 12 in file Exe_C.s
Comment: TOP_STACK used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RESET 00000000

Symbol: RESET
   Definitions
      At line 11 in file Exe_C.s
   Uses
      None
Comment: RESET unused
__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 12 in file Exe_C.s
   Uses
      At line 53 in file Exe_C.s
Comment: __Vectors used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DELAY 0000001E

Symbol: DELAY
   Definitions
      At line 40 in file Exe_C.s
   Uses
      At line 26 in file Exe_C.s
      At line 32 in file Exe_C.s

ENTRY 00000000

Symbol: ENTRY
   Definitions
      At line 17 in file Exe_C.s
   Uses
      None
Comment: ENTRY unused
Reset_Handler 00000040

Symbol: Reset_Handler
   Definitions
      At line 57 in file Exe_C.s
   Uses
      At line 54 in file Exe_C.s
Comment: Reset_Handler used once
START 00000000

Symbol: START
   Definitions
      At line 18 in file Exe_C.s
   Uses
      At line 13 in file Exe_C.s
      At line 58 in file Exe_C.s

delay0 00000020

Symbol: delay0
   Definitions
      At line 42 in file Exe_C.s
   Uses
      At line 46 in file Exe_C.s
Comment: delay0 used once
delay1 00000022

Symbol: delay1
   Definitions
      At line 43 in file Exe_C.s
   Uses
      At line 44 in file Exe_C.s
Comment: delay1 used once
leds_on 00000004

Symbol: leds_on
   Definitions
      At line 22 in file Exe_C.s
   Uses
      At line 34 in file Exe_C.s
Comment: leds_on used once
texts 00000000



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: texts
   Definitions
      At line 16 in file Exe_C.s
   Uses
      None
Comment: texts unused
8 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

COUNTER 000FFFFF

Symbol: COUNTER
   Definitions
      At line 38 in file Exe_C.s
   Uses
      At line 42 in file Exe_C.s
Comment: COUNTER used once
Stack_Size 00000200

Symbol: Stack_Size
   Definitions
      At line 6 in file Exe_C.s
   Uses
      At line 7 in file Exe_C.s
Comment: Stack_Size used once
2 symbols
339 symbols in table
